library(tidyverse)
require(scales)
library(lspline)
library(estimatr)
library(texreg)
library(ggthemes)
library(WDI)
data_in <- "~/Documents/GitHub/Assignment-1/data/"
df <- read_csv(paste0(data_in,"raw/covid_pop_10_15_2020_raw.csv"))
df <- read_csv(paste0(data_in,"raw/covid_10_15_2020_raw.csv"))
glimpse(df)
knitr::opts_chunk$set(echo = TRUE)
# Clear memory
rm(list=ls())
# Load packages
library(tidyverse)
require(scales)
library(lspline)
library(estimatr)
library(texreg)
library(ggthemes)
library(WDI)
library(magrittr)
library(moments)
library(gridExtra)
# Import data
data_in <- "~/Documents/GitHub/Assignment-1/data/"
df <- read_csv(paste0(data_in,"clean/covid_pop_10_15_2020_clean.csv"))
# Get the predicted y values from the model
df$reg4_y_pred <- reg4$fitted.values
# Take Logs
df <- df %>% mutate( ln_confirmed = log( confirmed ),
ln_death = log( death ) )
df <- subset(df, ln_death!= -Inf)
# Simple linear regression
reg1 <- lm (ln_death ~ ln_confirmed  , data = df)
summary( reg1 )
ggplot( data = df, aes( x = ln_confirmed, y = ln_death ) ) +
geom_point( color='blue') +
geom_smooth( method = lm , color = 'red' )
# Quadratic regression
#  Add powers of the "confirmed" variable to the dataframe:
df <- df %>% mutate( ln_confirmed_sq = ln_confirmed^2)
reg2 <- lm(ln_death ~ ln_confirmed + ln_confirmed_sq, data = df)
summary( reg2 )
ggplot( data = df, aes( x = ln_confirmed, y = ln_death ) ) +
geom_point( color='blue') +
geom_smooth( formula = y ~ poly(x,2) , method = lm , color = 'red' )
# Regression with piecewise linear spline
cutoff_ln <- log( 50 )
reg3<- lm(ln_death ~ lspline( ln_confirmed , cutoff_ln ), data = df )
summary( reg3 )
ggplot( data = df, aes( x = ln_confirmed, y = ln_death  ) ) +
geom_point( color='blue') +
geom_smooth( formula = y ~ lspline(x,cutoff_ln) , method = lm , color = 'red' )
# Weighted-OLS
reg4 <- lm(ln_death ~ ln_confirmed, data = df , weights = population)
summary( reg4 )
ggplot(data = df, aes(x = ln_confirmed, y = ln_death)) +
geom_point(data = df, aes(size=population),  color = 'blue', shape = 16, alpha = 0.6,  show.legend=F) +
geom_smooth(aes(weight = population), method = "lm", color='red')
# Get the predicted y values from the model
df$reg4_y_pred <- reg4$fitted.values
# Calculate the errors of the model
df$reg4_res <- df$ln_death - df$reg4_y_pred
# Find country with largest negative errors
l1 <- df %>% top_n( -5 , reg4_res ) %>%
select( country , ln_death , reg4_y_pred , reg4_res )
# Find country with largest positive errors
u1 <- df %>% top_n( 5 , reg4_res ) %>%
select( country , ln_death , reg4_y_pred , reg4_res )
t1 <- knitr::kable(l1,caption="Countries with largest negative errors")
t2 <-knitr::kable(u1,caption="Countries with largest positive errors")
cat(c("\\begin{table}[h] \\centering ",
t1,
"\\hspace{1cm} \\centering ",
t2,
"\\caption{My tables} \\end{table}"))
